---
trigger:
- features/*

pool:
  name: Azure Pipelines
  vmImage: 'ubuntu-latest'

stages:
- stage: BUILD
  jobs:
  - job: Build
    steps:
    - task: AzureKeyVault@1
      displayName: 'Azure Key Vault: deloitte-key-vault'
      inputs:
        azureSubscription: 'Recipe_Azure_Service_Conn'
        KeyVaultName: 'deloitte-key-vault' 

    - task: DownloadSecureFile@1
      name: terraformSecureFile
      inputs:
        secureFile: 'awslb_yamltest.tfvars.json'
    - task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@0
      displayName: 'Use Terraform 0.12.20'
      inputs:
        terraformVersion: 0.12.20

    - script: |
        terraform init -backend-config=storage_account_name=samstorageacc -backend-config=container_name=aws-load-balancer-with-provisioner -backend-config=key=AWSILB-Recipe.tfstate -backend-config=resource_group_name=AZRG-USE-ITS-RCPNPD-NPD-001 -backend-config=subscription_id=$(subscription-id) -backend-config=tenant_id=$(tenant-id) -backend-config=client_id=$(client-id) -backend-config=client_secret=$(client-secret)
      displayName: terraform init 
      workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-webfront-aws-HCL'

    - script: |
        terraform validate 
      displayName: terraform validate 
      workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-webfront-aws-HCL'

    - script: |
        terraform plan -var-file='$(terraformSecureFile.secureFilePath)' -var client_id=$(client-id) -var client_secret=$(client-secret) -var access_key=$(access-key) -var secret_key=$(secret-key)
      displayName: terraform plan 
      workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-webfront-aws-HCL'

    - powershell: echo "##vso[task.setvariable variable=accessKey;isOutput=true]$(access-key)"
      name: set_accesskey      
    - powershell: echo "##vso[task.setvariable variable=secretKey;isOutput=true]$(secret-key)"
      name: set_secretkey

    - task: PublishPipelineArtifact@1
      displayName: 'Publish Pipeline Artifact'
      inputs:
        artifact: cmp-build


  - job: Test
    dependsOn: Build
    variables:
      AWS_ACCESS_KEY_ID: $[ dependencies.Build.outputs['set_accesskey.accessKey'] ]
      AWS_SECRET_ACCESS_KEY: $[ dependencies.Build.outputs['set_secretkey.secretKey'] ]
      AWS_DEFAULT_REGION: 'us-east-1'
    steps:
    - task: DownloadPipelineArtifact@2
      displayName: Download Artifact from current run
      inputs:
        buildType: 'current'
        artifactName: 'cmp-build'
        targetPath: '$(Pipeline.Workspace)'
    
    - task: AzureKeyVault@1
      displayName: 'Azure Key Vault: deloitte-key-vault'
      inputs:
        azureSubscription: 'Recipe_Azure_Service_Conn'
        KeyVaultName: 'deloitte-key-vault' 
    - task: DownloadSecureFile@1
      name: terraformSecureFile
      inputs:
        secureFile: 'awslb_yamltest.tfvars.json'
    - script: |
        terraform plan -var-file='$(Agent.TempDirectory)/awslb_yamltest.tfvars.json' -var client_id=$(client-id) -var client_secret=$(client-secret) -var access_key=$(access-key) -var secret_key=$(secret-key)
      displayName: terraform plan 
      workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-webfront-aws-HCL'





    