---
trigger:
- features/*

pool:
  vmImage: 'ubuntu-latest'

variables:
  AZURE_SUBSCRIPTION_ID: $(AZ.SubscriptionId)
  AZURE_TENANT: $(AZ.TenantId)
  AZURE_CLIENT_ID: $(AZ.ClientId)
  AZURE_SECRET: $(AZ.ClientSecret)

stages:
- stage: BUILD
  jobs:
  - job: Test
    steps:
    - task: vsts-chef-task-install-inspec@1
      displayName: 'Install InSpec'
      inputs:
        chefInstallScriptDownloadURLLinux: 'https://omnitruck.chef.io/install.sh'
        downloadsFolderLinux: '/home/temp'        

    - task: AzurePowerShell@4
      displayName: 'State file from Backend'
      inputs:
        azureSubscription: 'Recipe_Azure_Service_Conn'
        ScriptType: InlineScript
        Inline: |
          $StorageAccountName = "samstorageacc"
          $sasToken = "sp=r&st=2020-05-12T05:41:03Z&se=2020-08-12T13:41:03Z&spr=https&sv=2019-10-10&sr=b&sig=ZFMRc6ctrrY8oMIYmcQV%2ByFa5fnzfbTZzPTWLP2wYTI%3D"
          $Ctx = New-AzStorageContext -StorageAccountName $StorageAccountName ` -SasToken $sasToken
          $BlobName = "AWSILB-Recipe.tfstate"
          $localTargetDirectory = "test/aws_HCL_test/files"
          mkdir $localTargetDirectory
          $ContainerName  = "aws-load-balancer-with-provisioner"          
          Get-AzStorageBlobContent -Blob $BlobName -Container $ContainerName `
                  -Destination $localTargetDirectory -Context $ctx
        preferredAzurePowerShellVersion: 3.1.0
        workingDirectory: 'terraform-webfront-aws-HCL'

    - script: |
        inspec check aws_HCL_test --chef-license accept
      displayName: 'InSpec Linter'
      workingDirectory: 'terraform-webfront-aws-HCL/test'


  - job: Package
    dependsOn: Test
    steps:
    - task: UseRubyVersion@0
      displayName: 'Use Ruby >= 2.4'
      inputs:
        versionSpec: '>= 2.4'

    - task: PublishPipelineArtifact@1
      displayName: 'Publish Pipeline Artifact'
      inputs:
        artifact: webfront-build

- stage: DEPLOY
  dependsOn: BUILD
  jobs:
  - job: NPD_DEPLOYMENT 
    variables:
      AWS_ACCESS_KEY_ID: $(NPD.AWS.AccessKey)
      AWS_SECRET_ACCESS_KEY: $(NPD.AWS.SecretAccessKey)
      AWS_DEFAULT_REGION: 'us-east-1'      
    steps:
    - task: DownloadPipelineArtifact@2
      displayName: Download Artifact from current run
      inputs:
        buildType: 'current'
        artifactName: 'webfront-build'
        targetPath: '$(Pipeline.Workspace)' 

    - task: vsts-chef-task-install-inspec@1
      displayName: 'Install InSpec'
      inputs:
        chefInstallScriptDownloadURLLinux: 'https://omnitruck.chef.io/install.sh'
        downloadsFolderLinux: '/home/temp'


    - task: AzurePowerShell@4
      displayName: 'State file from Backend'
      inputs:
        azureSubscription: 'Recipe_Azure_Service_Conn'
        ScriptType: InlineScript
        Inline: |
          $StorageAccountName = "samstorageacc"
          $sasToken = "sp=r&st=2020-05-12T05:41:03Z&se=2020-08-12T13:41:03Z&spr=https&sv=2019-10-10&sr=b&sig=ZFMRc6ctrrY8oMIYmcQV%2ByFa5fnzfbTZzPTWLP2wYTI%3D"
          $Ctx = New-AzStorageContext -StorageAccountName $StorageAccountName ` -SasToken $sasToken
          $BlobName = "AWSILB-Recipe.tfstate"
          $localTargetDirectory = "test/aws_HCL_test/files"
          mkdir $localTargetDirectory
          $ContainerName  = "aws-load-balancer-with-provisioner"          
          Get-AzStorageBlobContent -Blob $BlobName -Container $ContainerName `
                  -Destination $localTargetDirectory -Context $ctx
        preferredAzurePowerShellVersion: 3.1.0
        workingDirectory: 'terraform-webfront-aws-HCL'
        
    - script: |
        cat "aws_HCL_test/files/AWSILB-Recipe.tfstate"
      displayName: 'Print State file'
      workingDirectory: 'terraform-webfront-aws-HCL/test'

    - script: |
        export AWS_ACCESS_KEY_ID=$(AWS_ACCESS_KEY_ID)
        export AWS_SECRET_ACCESS_KEY=$(AWS_SECRET_ACCESS_KEY)
        inspec exec aws_HCL_test -t aws:// --chef-license accept --reporter cli junit:testresults.xml html:report.html
      displayName: 'Execute InSpec'
      workingDirectory: 'terraform-webfront-aws-HCL/test'
    - task: PublishTestResults@2
      displayName: 'Publish test results'
      inputs:
        testResultsFiles: 'testresults.xml'
        searchFolder: 'terraform-webfront-aws-HCL/test'
      condition: succeededOrFailed()
    - task: PublishTestResults@2
      displayName: 'Publish test results'
      inputs:
        testResultsFiles: 'report.html'
        searchFolder: 'terraform-webfront-aws-HCL/test'
      condition: succeededOrFailed()
    - task: PublishBuildArtifacts@1
      displayName: Publish inspec HTML report
      condition: succeededOrFailed()
      inputs:
        pathtoPublish: 'terraform-webfront-aws-HCL/test/report.html'
        artifactName: 'report' 
    - task: PublishCodeCoverageResults@1
      inputs:
        codeCoverageTool: 'Cobertura'
        summaryFileLocation: 'terraform-webfront-aws-HCL/test/report.html'
        reportDirectory: 'terraform-webfront-aws-HCL/test'
      condition: succeededOrFailed()



